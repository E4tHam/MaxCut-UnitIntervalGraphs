
// main.cpp //

#include "graph.h"

#include <iostream>
#include <time.h>
#include <stdlib.h>


using namespace std;

void findWorstCase() ;
void testmany() ;

int main() { srand (time(NULL));
    // findWorstCase() ;

    // testmany() ;

    // UnitIntervalGraph().ES_maxcut() ; 

    vector<u2> sizes, connections ;
    sizes.push_back(4); connections.push_back(1);
    sizes.push_back(3); connections.push_back(2);
    sizes.push_back(6); connections.push_back(3);
    sizes.push_back(5); connections.push_back(4);
    sizes.push_back(7); connections.push_back(3);
    sizes.push_back(6); connections.push_back(2);
    sizes.push_back(9); connections.push_back(1);
    UnitIntervalGraph( sizes, connections ).ES_maxcut() ;
    cout << UnitIntervalGraph( sizes, connections ).EO_maxcut() << endl ;



    return 0 ;
}

void findWorstCase() {
    UnitIntervalGraph * g = 0 ;
    u2 MAX = 0, ES, EO ;
    for (;;) {
        g = new UnitIntervalGraph() ;
        try { ES = g->ES_maxcut() ; EO = g->EO_maxcut() ; }
        catch ( UnitIntervalGraph::GraphTooLarge ) { delete g ; continue ; }
        if ( ES-EO > MAX ) {
            MAX = ES-EO ;
            cout << "Found worse case! Difference: " << MAX << endl ;
            g->print() ;
        }
        delete g ;
    }
    
}

void testmany() {
    vector<u2> sizes, connections ;

    sizes.push_back(1); connections.push_back(1);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(4);
    sizes.push_back(1); connections.push_back(5);
    sizes.push_back(1); connections.push_back(6);
    sizes.push_back(1); connections.push_back(7);
    sizes.push_back(1); connections.push_back(6);
    sizes.push_back(1); connections.push_back(5);
    sizes.push_back(1); connections.push_back(4);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(1);
    UnitIntervalGraph( sizes, connections ).ES_maxcut() ;
    cout << UnitIntervalGraph( sizes, connections ).EO_maxcut() << endl ;
    sizes.clear() ; connections.clear() ;

    sizes.push_back(1); connections.push_back(1);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(4);
    sizes.push_back(1); connections.push_back(5);
    sizes.push_back(1); connections.push_back(6);
    sizes.push_back(1); connections.push_back(5);
    sizes.push_back(1); connections.push_back(4);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(1);
    UnitIntervalGraph( sizes, connections ).ES_maxcut() ;
    cout << UnitIntervalGraph( sizes, connections ).EO_maxcut() << endl ;
    sizes.clear() ; connections.clear() ;

    sizes.push_back(1); connections.push_back(1);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(4);
    sizes.push_back(1); connections.push_back(5);
    sizes.push_back(1); connections.push_back(4);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(1);
    UnitIntervalGraph( sizes, connections ).ES_maxcut() ;
    cout << UnitIntervalGraph( sizes, connections ).EO_maxcut() << endl ;
    sizes.clear() ; connections.clear() ;

    sizes.push_back(1); connections.push_back(1);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(4);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(1);
    UnitIntervalGraph( sizes, connections ).ES_maxcut() ;
    cout << UnitIntervalGraph( sizes, connections ).EO_maxcut() << endl ;
    sizes.clear() ; connections.clear() ;

    sizes.push_back(1); connections.push_back(1);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(3);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(1);
    UnitIntervalGraph( sizes, connections ).ES_maxcut() ;
    cout << UnitIntervalGraph( sizes, connections ).EO_maxcut() << endl ;
    sizes.clear() ; connections.clear() ;

    sizes.push_back(1); connections.push_back(1);
    sizes.push_back(1); connections.push_back(2);
    sizes.push_back(1); connections.push_back(1);
    UnitIntervalGraph( sizes, connections ).ES_maxcut() ;
    cout << UnitIntervalGraph( sizes, connections ).EO_maxcut() << endl ;
    sizes.clear() ; connections.clear() ;

    sizes.push_back(1); connections.push_back(1);
    UnitIntervalGraph( sizes, connections ).ES_maxcut() ;
    cout << UnitIntervalGraph( sizes, connections ).EO_maxcut() << endl ;
    sizes.clear() ; connections.clear() ;
}